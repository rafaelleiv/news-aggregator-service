// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @db.Text
  publishedAt DateTime
  summary     String?  @db.Text
  link        String?  @db.Text
  topics      Topic[]  @relation("ArticleTopics")
  states      State[]  @relation("ArticleStates")
  authorId    Int?
  author      User?    @relation(fields: [authorId], references: [id])
  authorName  String?
  views       Int      @default(0)
  image       String?  @db.Text
  slug        String   @unique

  source String?

  @@index([slug], name: "article_slug_idx") // Index on slug
}

model State {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  code            String            @unique
  articles        Article[]         @relation("ArticleStates")
  userPreferences UserPreferences[]
}

model Topic {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  articles        Article[]         @relation("ArticleTopics")
  userPreferences UserPreferences[]
  jobStates       JobState[]
}

model User {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  name        String?
  image       String?
  preferences UserPreferences?
  articles    Article[]
}

model UserPreferences {
  id          Int     @id @default(autoincrement())
  userId      Int     @unique
  savedStates State[]
  savedTopics Topic[]
  user        User    @relation(fields: [userId], references: [id])
}

model JobState {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  lastPublishedAt DateTime?
  page            Int?      @default(1)
  pageSize        Int?      @default(10)
  interval        String    @default("10m") /// Possible values: "1s", "1m", "1h", "1d". Defaults to "10m".
  isActive        Boolean   @default(false)
  topicId         Int? // Optional topicId
  topic           Topic?    @relation(fields: [topicId], references: [id], onDelete: SetNull) // Optional relationship
  updatedAt       DateTime  @updatedAt

  @@index([name], name: "jobstate_name_idx") // Index on name
  @@index([topicId], name: "jobstate_topicId_idx") // Index on topicId
}
